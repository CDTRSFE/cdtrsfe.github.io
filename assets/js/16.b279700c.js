(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{392:function(e,t,i){"use strict";i.r(t);var s=i(6),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"如何让-flex-item-平分空间"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#如何让-flex-item-平分空间"}},[e._v("#")]),e._v(" 如何让 flex item 平分空间")]),e._v(" "),i("p",[e._v("我们来看一个示例，有如下HTML结构：")]),e._v(" "),i("DemoAndCode",{attrs:{htmlStr:"%3Ctemplate%3E%0A%20%20%3Cdiv%20class%3D%22outer-1%22%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a1%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22b1%22%3E%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a2%22%3E%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Ftemplate%3E%0A%3Cstyle%3E%0A%20%20.outer-1%20%7B%0A%20%20%20%20width%3A%20400px%3B%0A%20%20%20%20display%3A%20flex%3B%0A%20%20%7D%0A%20%20.outer-1%20.a1%20%7B%0A%20%20%20%20background%3A%20red%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%7D%0A%20%20.outer-1%20.b1%20%7B%0A%20%20%20%20width%3A%20100px%0A%20%20%7D%0A%20%20.outer-1%20.a2%20%7B%0A%20%20%20%20background%3A%20blue%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%7D%0A%3C%2Fstyle%3E%0A",language:"vue",showText:"show code",hideText:"hide code",jsLibsStr:"%5B%5D",cssLibsStr:"%5B%5D",minHeight:void 0,onlineBtnsStr:"%7B%22codepen%22%3Atrue%2C%22jsfiddle%22%3Atrue%2C%22codesandbox%22%3Atrue%7D",codesandboxStr:"%7B%22deps%22%3A%7B%7D%2C%22json%22%3A%22%22%2C%22query%22%3A%22module%3DApp.vue%22%2C%22embed%22%3A%22%22%7D"}},[i("template",{slot:"demo"},[[i("div",{staticClass:"outer-1"},[i("div",{staticClass:"a1"},[i("div",{staticClass:"b1"})]),e._v(" "),i("div",{staticClass:"a2"})])],e._v(" "),i("style",[e._v("\n  .outer-1 {\n    width: 400px;\n    display: flex;\n  }\n  .outer-1 .a1 {\n    background: red;\n    height: 100px;\n    flex-grow: 1;\n  }\n  .outer-1 .b1 {\n    width: 100px\n  }\n  .outer-1 .a2 {\n    background: blue;\n    height: 100px;\n    flex-grow: 1;\n  }\n")])],2)],2),e._v(" "),i("p",[e._v("我们希望通过设置 "),i("code",[e._v("flex-grow: 1")]),e._v(" 来让两个 flex item 填充均分，而结果并非如我们所愿，两个元素的区别就是一个有子元素，一个没有。查阅"),i("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-grow",target:"_blank",rel:"noopener noreferrer"}},[e._v("MDN文档"),i("OutboundLink")],1),e._v("我们可以得知")]),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),i("p",[e._v("CSS属性 flex-grow设置了一个flex项主尺寸的flex增长系数。它指定了flex容器中剩余空间的多少应该分配给项目（flex增长系数）。")]),e._v(" "),i("p",[e._v("主尺寸是项的宽度或高度，这取决于flex-direction值。")])]),e._v(" "),i("p",[e._v("其中有一个关键词叫 "),i("code",[e._v("主尺寸")]),e._v("，那么如何确定这个主尺寸呢？通过"),i("a",{attrs:{href:"https://www.w3.org/TR/css-flexbox/#flex-basis-property",target:"_blank",rel:"noopener noreferrer"}},[e._v("W3C"),i("OutboundLink")],1),e._v("我们可以找到")]),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),i("p",[e._v("flex-basis is relative to the flex container’s inner main size")])]),e._v(" "),i("p",[e._v("因此我们最终明白可以通过设置 "),i("code",[e._v("flex-basis")]),e._v(" 来设置 flex item 的主尺寸，于是我们修改代码如下")]),e._v(" "),i("DemoAndCode",{attrs:{htmlStr:"%3Ctemplate%3E%0A%20%20%3Cdiv%20class%3D%22outer-2%22%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a1%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22b1%22%3E%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a2%22%3E%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Ftemplate%3E%0A%3Cstyle%3E%0A%20%20.outer-2%20%7B%0A%20%20%20%20width%3A%20400px%3B%0A%20%20%20%20display%3A%20flex%3B%0A%20%20%7D%0A%20%20.outer-2%20.a1%20%7B%0A%20%20%20%20background%3A%20red%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%200%3B%0A%20%20%7D%0A%20%20.outer-2%20.b1%20%7B%0A%20%20%20%20width%3A%20100px%0A%20%20%7D%0A%20%20.outer-2%20.a2%20%7B%0A%20%20%20%20background%3A%20blue%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%200%3B%0A%20%20%7D%0A%3C%2Fstyle%3E%0A",language:"vue",showText:"show code",hideText:"hide code",jsLibsStr:"%5B%5D",cssLibsStr:"%5B%5D",minHeight:void 0,onlineBtnsStr:"%7B%22codepen%22%3Atrue%2C%22jsfiddle%22%3Atrue%2C%22codesandbox%22%3Atrue%7D",codesandboxStr:"%7B%22deps%22%3A%7B%7D%2C%22json%22%3A%22%22%2C%22query%22%3A%22module%3DApp.vue%22%2C%22embed%22%3A%22%22%7D"}},[i("template",{slot:"demo"},[[i("div",{staticClass:"outer-2"},[i("div",{staticClass:"a1"},[i("div",{staticClass:"b1"})]),e._v(" "),i("div",{staticClass:"a2"})])],e._v(" "),i("style",[e._v("\n  .outer-2 {\n    width: 400px;\n    display: flex;\n  }\n  .outer-2 .a1 {\n    background: red;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n  .outer-2 .b1 {\n    width: 100px\n  }\n  .outer-2 .a2 {\n    background: blue;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n")])],2)],2),e._v(" "),i("p",[e._v("可以看到 a1 和 a2 在 "),i("code",[e._v("flex-basis")]),e._v(" 的加持下宽度相等了，事情到这还没结束，我们接着将 "),i("code",[e._v("b1")]),e._v(" 的宽度设为 300px")]),e._v(" "),i("DemoAndCode",{attrs:{htmlStr:"%3Ctemplate%3E%0A%20%20%3Cdiv%20class%3D%22outer-3%22%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a1%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22b1%22%3E%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a2%22%3E%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Ftemplate%3E%0A%3Cstyle%3E%0A%20%20.outer-3%20%7B%0A%20%20%20%20width%3A%20400px%3B%0A%20%20%20%20display%3A%20flex%3B%0A%20%20%7D%0A%20%20.outer-3%20.a1%20%7B%0A%20%20%20%20background%3A%20red%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%200%3B%0A%20%20%7D%0A%20%20.outer-3%20.b1%20%7B%0A%20%20%20%20width%3A%20300px%0A%20%20%7D%0A%20%20.outer-3%20.a2%20%7B%0A%20%20%20%20background%3A%20blue%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%200%3B%0A%20%20%7D%0A%3C%2Fstyle%3E%0A",language:"vue",showText:"show code",hideText:"hide code",jsLibsStr:"%5B%5D",cssLibsStr:"%5B%5D",minHeight:void 0,onlineBtnsStr:"%7B%22codepen%22%3Atrue%2C%22jsfiddle%22%3Atrue%2C%22codesandbox%22%3Atrue%7D",codesandboxStr:"%7B%22deps%22%3A%7B%7D%2C%22json%22%3A%22%22%2C%22query%22%3A%22module%3DApp.vue%22%2C%22embed%22%3A%22%22%7D"}},[i("template",{slot:"demo"},[[i("div",{staticClass:"outer-3"},[i("div",{staticClass:"a1"},[i("div",{staticClass:"b1"})]),e._v(" "),i("div",{staticClass:"a2"})])],e._v(" "),i("style",[e._v("\n  .outer-3 {\n    width: 400px;\n    display: flex;\n  }\n  .outer-3 .a1 {\n    background: red;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n  .outer-3 .b1 {\n    width: 300px\n  }\n  .outer-3 .a2 {\n    background: blue;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n")])],2)],2),e._v(" "),i("p",[e._v("你会发现，在 a1 的子元素宽度过大（大于平均宽度）的情况下，仍然不会均分，"),i("code",[e._v("flex-basis")]),e._v(" 失效了吗？我们一定是忽略了某些细节。接着我们找到"),i("a",{attrs:{href:"https://www.w3.org/TR/css-flexbox/#main-size",target:"_blank",rel:"noopener noreferrer"}},[e._v("W3C关于Man Size 的描述"),i("OutboundLink")],1),e._v("，其中有这么一句")]),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),i("p",[e._v("its min and max main size properties are its min-width/max-width or min-height/max-height properties")])]),e._v(" "),i("p",[e._v("说明不光存在 main size 主尺寸，还存在最小和最大主尺寸，会对最终的宽度造成影响，效果和 width 与 min/max-width 一样，也就是说这样里面必然存在一个优先级，"),i("a",{attrs:{href:"https://mastery.games/post/the-difference-between-width-and-flex-basis/",target:"_blank",rel:"noopener noreferrer"}},[e._v("相关文章"),i("OutboundLink")],1),e._v("中有提到这样的一个优先级规则")]),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),i("p",[e._v("content > width > flex-basis (limted by max|min-width)")])]),e._v(" "),i("p",[e._v("按照这个规则推测，之所以在设置了 "),i("code",[e._v("flex-basis")]),e._v(" 相等之后仍然没有均分的唯一可能就是a1和b1自身存在 "),i("code",[e._v("min-width")]),e._v("，打开F12我们可以看到他俩的 min-width 默认都为 "),i("code",[e._v("auto")]),e._v("，再结合 W3C关于min-width的描述")]),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),i("p",[e._v("Note: The auto keyword, representing an automatic minimum size, is the new initial value of the min-width and min-height properties. The keyword was previously defined in this specification, but is now defined in the CSS Sizing module.")]),e._v(" "),i("p",[e._v("To provide a more reasonable default minimum size for flex items, the used value of a main axis automatic minimum size on a flex item that is not a scroll container is a content-based minimum size; for scroll containers the automatic minimum size is zero, as usual.")])]),e._v(" "),i("p",[e._v("可以看到，在非滚动的容器下，auto 实际上等于 "),i("code",[e._v("content-based minimum size")]),e._v("，基于内容的最小宽度又是啥呢，接着看解释")]),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),i("p",[e._v("In general, the content-based minimum size of a flex item is the smaller of its content size suggestion and its specified size suggestion.")])]),e._v(" "),i("p",[e._v("到此便可以解释最后一个示例了，由于 a1 的字元素 b1 宽度为 300px，因此 a1 的 content size（内容宽度）就等于 300px，由于 a1 本身没有指定 width 所以 min-width 就是 300px，先通过 "),i("code",[e._v("flex-basis")]),e._v(" 和 "),i("code",[e._v("flex-grow")]),e._v(" 计算出每个flex item的宽度，然后再和各自的 min-width 做一个交叉，所以这个计算过程就是：")]),e._v(" "),i("ul",[i("li",[e._v("a1 和 b1 的 flex-basis 为 0")]),e._v(" "),i("li",[e._v("剩余空间为 "),i("code",[e._v("400 - 0")]),e._v(" 分配到 a1 和 b1 的宽度均为 200px")]),e._v(" "),i("li",[e._v("a1 的最终宽度 = 0 + 200px = 200px")]),e._v(" "),i("li",[e._v("由于 a1 本身有 min-width 300px，大于 200px，所以把 a1 重置为 300px")]),e._v(" "),i("li",[e._v("b1 = 400 - 300 = 100px")])]),e._v(" "),i("p",[e._v("为了验证上面的猜想，我们可以改动一下代码")]),e._v(" "),i("DemoAndCode",{attrs:{htmlStr:"%3Ctemplate%3E%0A%20%20%3Cdiv%20class%3D%22outer-4%22%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a1%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22b1%22%3E%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a2%22%3E%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Ftemplate%3E%0A%3Cstyle%3E%0A%20%20.outer-4%20%7B%0A%20%20%20%20width%3A%20400px%3B%0A%20%20%20%20display%3A%20flex%3B%0A%20%20%7D%0A%20%20.outer-4%20.a1%20%7B%0A%20%20%20%20background%3A%20red%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%20250px%3B%0A%20%20%7D%0A%20%20.outer-4%20.b1%20%7B%0A%20%20%20%20width%3A%20300px%0A%20%20%7D%0A%20%20.outer-4%20.a2%20%7B%0A%20%20%20%20background%3A%20blue%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%200%3B%0A%20%20%7D%0A%3C%2Fstyle%3E%0A",language:"vue",showText:"show code",hideText:"hide code",jsLibsStr:"%5B%5D",cssLibsStr:"%5B%5D",minHeight:void 0,onlineBtnsStr:"%7B%22codepen%22%3Atrue%2C%22jsfiddle%22%3Atrue%2C%22codesandbox%22%3Atrue%7D",codesandboxStr:"%7B%22deps%22%3A%7B%7D%2C%22json%22%3A%22%22%2C%22query%22%3A%22module%3DApp.vue%22%2C%22embed%22%3A%22%22%7D"}},[i("template",{slot:"demo"},[[i("div",{staticClass:"outer-4"},[i("div",{staticClass:"a1"},[i("div",{staticClass:"b1"})]),e._v(" "),i("div",{staticClass:"a2"})])],e._v(" "),i("style",[e._v("\n  .outer-4 {\n    width: 400px;\n    display: flex;\n  }\n  .outer-4 .a1 {\n    background: red;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 250px;\n  }\n  .outer-4 .b1 {\n    width: 300px\n  }\n  .outer-4 .a2 {\n    background: blue;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n")])],2)],2),e._v(" "),i("p",[e._v("同样分析一下这个过程:")]),e._v(" "),i("ul",[i("li",[e._v("a1 的 flex-basis 为 250， b1 的 flex-basis 为 0")]),e._v(" "),i("li",[e._v("剩余空间为 "),i("code",[e._v("400 - 0 - 250 = 150")]),e._v(" 分配到 a1 和 b1 的宽度均为 150 / 2 = 75px")]),e._v(" "),i("li",[e._v("a1 的最终宽度 = 250 + 75 = 325px")]),e._v(" "),i("li",[e._v("由于 a1 本身有 min-width 300px，但是小于 325，所以忽略")]),e._v(" "),i("li",[e._v("b1 = 400 - 325 = 75px")])]),e._v(" "),i("p",[e._v("当然也可以把 flex-basis 换成 width，因为在没有设置 flex-basis 的情况下，默认等于width")]),e._v(" "),i("DemoAndCode",{attrs:{htmlStr:"%3Ctemplate%3E%0A%20%20%3Cdiv%20class%3D%22outer-4%22%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a1%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22b1%22%3E%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a2%22%3E%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Ftemplate%3E%0A%3Cstyle%3E%0A%20%20.outer-4%20%7B%0A%20%20%20%20width%3A%20400px%3B%0A%20%20%20%20display%3A%20flex%3B%0A%20%20%7D%0A%20%20.outer-4%20.a1%20%7B%0A%20%20%20%20background%3A%20red%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20width%3A%20250px%3B%0A%20%20%7D%0A%20%20.outer-4%20.b1%20%7B%0A%20%20%20%20width%3A%20300px%0A%20%20%7D%0A%20%20.outer-4%20.a2%20%7B%0A%20%20%20%20background%3A%20blue%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%200%3B%0A%20%20%7D%0A%3C%2Fstyle%3E%0A",language:"vue",showText:"show code",hideText:"hide code",jsLibsStr:"%5B%5D",cssLibsStr:"%5B%5D",minHeight:void 0,onlineBtnsStr:"%7B%22codepen%22%3Atrue%2C%22jsfiddle%22%3Atrue%2C%22codesandbox%22%3Atrue%7D",codesandboxStr:"%7B%22deps%22%3A%7B%7D%2C%22json%22%3A%22%22%2C%22query%22%3A%22module%3DApp.vue%22%2C%22embed%22%3A%22%22%7D"}},[i("template",{slot:"demo"},[[i("div",{staticClass:"outer-4"},[i("div",{staticClass:"a1"},[i("div",{staticClass:"b1"})]),e._v(" "),i("div",{staticClass:"a2"})])],e._v(" "),i("style",[e._v("\n  .outer-4 {\n    width: 400px;\n    display: flex;\n  }\n  .outer-4 .a1 {\n    background: red;\n    height: 100px;\n    flex-grow: 1;\n    width: 250px;\n  }\n  .outer-4 .b1 {\n    width: 300px\n  }\n  .outer-4 .a2 {\n    background: blue;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n")])],2)],2),e._v(" "),i("div",{staticClass:"custom-block warning"},[i("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),i("p",[e._v("因此最终每个元素宽度的计算过程就是")]),e._v(" "),i("ul",[i("li",[e._v("1、根据 flex-basis 计算出剩余空间")]),e._v(" "),i("li",[e._v("2、结合 flex-grow 计算要分配给每个元素的剩余空间")]),e._v(" "),i("li",[e._v("3、用 flex-basis + 分配给自己的剩余空间得出每个空间的预计宽度，等价于 "),i("code",[e._v("width")]),e._v(" 属性")]),e._v(" "),i("li",[e._v("4、结合计算出的 min-width 和 max-width 渲染出最终的宽度（此处涉及到 width与min/max-width的计算规则）")])])]),e._v(" "),i("p",[e._v("综上，我们可以得出")]),e._v(" "),i("div",{staticClass:"custom-block danger"},[i("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),i("p",[e._v("min-width 只是限制 flex item 的最终宽度，而没有参与到剩余空间的计算。剩余空间永远是参照 flex-basis 去计算的。")])]),e._v(" "),i("p",[e._v("那么回到一开始的问题，如何让 flex item 平分其实就很简单了，只需要保证 a1 的 "),i("code",[e._v("min-width")]),e._v(" 为 0 即可")]),e._v(" "),i("DemoAndCode",{attrs:{htmlStr:"%3Ctemplate%3E%0A%20%20%3Cdiv%20class%3D%22outer-5%22%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a1%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22b1%22%3E%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a2%22%3E%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Ftemplate%3E%0A%3Cstyle%3E%0A%20%20.outer-5%20%7B%0A%20%20%20%20width%3A%20400px%3B%0A%20%20%20%20display%3A%20flex%3B%0A%20%20%7D%0A%20%20.outer-5%20.a1%20%7B%0A%20%20%20%20background%3A%20red%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%200%3B%0A%20%20%20%20min-width%3A%200%3B%0A%20%20%7D%0A%20%20.outer-5%20.b1%20%7B%0A%20%20%20%20width%3A%20300px%0A%20%20%7D%0A%20%20.outer-5%20.a2%20%7B%0A%20%20%20%20background%3A%20blue%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%200%3B%0A%20%20%7D%0A%3C%2Fstyle%3E%0A",language:"vue",showText:"show code",hideText:"hide code",jsLibsStr:"%5B%5D",cssLibsStr:"%5B%5D",minHeight:void 0,onlineBtnsStr:"%7B%22codepen%22%3Atrue%2C%22jsfiddle%22%3Atrue%2C%22codesandbox%22%3Atrue%7D",codesandboxStr:"%7B%22deps%22%3A%7B%7D%2C%22json%22%3A%22%22%2C%22query%22%3A%22module%3DApp.vue%22%2C%22embed%22%3A%22%22%7D"}},[i("template",{slot:"demo"},[[i("div",{staticClass:"outer-5"},[i("div",{staticClass:"a1"},[i("div",{staticClass:"b1"})]),e._v(" "),i("div",{staticClass:"a2"})])],e._v(" "),i("style",[e._v("\n  .outer-5 {\n    width: 400px;\n    display: flex;\n  }\n  .outer-5 .a1 {\n    background: red;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 0;\n    min-width: 0;\n  }\n  .outer-5 .b1 {\n    width: 300px\n  }\n  .outer-5 .a2 {\n    background: blue;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n")])],2)],2),e._v(" "),i("p",[e._v("当然可以设置 "),i("code",[e._v("width: 0")]),e._v(" 因为根据上面的 min-width 计算规则，手动指定了 width 的值就会取和他内容宽度相比的最小值，也就是 0")]),e._v(" "),i("DemoAndCode",{attrs:{htmlStr:"%3Ctemplate%3E%0A%20%20%3Cdiv%20class%3D%22outer-6%22%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a1%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22b1%22%3E%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a2%22%3E%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Ftemplate%3E%0A%3Cstyle%3E%0A%20%20.outer-6%20%7B%0A%20%20%20%20width%3A%20400px%3B%0A%20%20%20%20display%3A%20flex%3B%0A%20%20%7D%0A%20%20.outer-6%20.a1%20%7B%0A%20%20%20%20background%3A%20red%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%200%3B%0A%20%20%20%20width%3A%200%3B%0A%20%20%7D%0A%20%20.outer-6%20.b1%20%7B%0A%20%20%20%20width%3A%20300px%0A%20%20%7D%0A%20%20.outer-6%20.a2%20%7B%0A%20%20%20%20background%3A%20blue%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%200%3B%0A%20%20%7D%0A%3C%2Fstyle%3E%0A",language:"vue",showText:"show code",hideText:"hide code",jsLibsStr:"%5B%5D",cssLibsStr:"%5B%5D",minHeight:void 0,onlineBtnsStr:"%7B%22codepen%22%3Atrue%2C%22jsfiddle%22%3Atrue%2C%22codesandbox%22%3Atrue%7D",codesandboxStr:"%7B%22deps%22%3A%7B%7D%2C%22json%22%3A%22%22%2C%22query%22%3A%22module%3DApp.vue%22%2C%22embed%22%3A%22%22%7D"}},[i("template",{slot:"demo"},[[i("div",{staticClass:"outer-6"},[i("div",{staticClass:"a1"},[i("div",{staticClass:"b1"})]),e._v(" "),i("div",{staticClass:"a2"})])],e._v(" "),i("style",[e._v("\n  .outer-6 {\n    width: 400px;\n    display: flex;\n  }\n  .outer-6 .a1 {\n    background: red;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 0;\n    width: 0;\n  }\n  .outer-6 .b1 {\n    width: 300px\n  }\n  .outer-6 .a2 {\n    background: blue;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n")])],2)],2),e._v(" "),i("p",[e._v("另外一个解决方式就是让 a1 滚动起来，因为 "),i("code",[e._v("for scroll containers the automatic minimum size is zero")])]),e._v(" "),i("DemoAndCode",{attrs:{htmlStr:"%3Ctemplate%3E%0A%20%20%3Cdiv%20class%3D%22outer-7%22%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a1%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22b1%22%3E%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a2%22%3E%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Ftemplate%3E%0A%3Cstyle%3E%0A%20%20.outer-7%20%7B%0A%20%20%20%20width%3A%20400px%3B%0A%20%20%20%20display%3A%20flex%3B%0A%20%20%7D%0A%20%20.outer-7%20.a1%20%7B%0A%20%20%20%20background%3A%20red%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%200%3B%0A%20%20%20%20overflow-x%3A%20auto%3B%0A%20%20%7D%0A%20%20.outer-7%20.b1%20%7B%0A%20%20%20%20width%3A%20300px%0A%20%20%7D%0A%20%20.outer-7%20.a2%20%7B%0A%20%20%20%20background%3A%20blue%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%200%3B%0A%20%20%7D%0A%3C%2Fstyle%3E%0A",language:"vue",showText:"show code",hideText:"hide code",jsLibsStr:"%5B%5D",cssLibsStr:"%5B%5D",minHeight:void 0,onlineBtnsStr:"%7B%22codepen%22%3Atrue%2C%22jsfiddle%22%3Atrue%2C%22codesandbox%22%3Atrue%7D",codesandboxStr:"%7B%22deps%22%3A%7B%7D%2C%22json%22%3A%22%22%2C%22query%22%3A%22module%3DApp.vue%22%2C%22embed%22%3A%22%22%7D"}},[i("template",{slot:"demo"},[[i("div",{staticClass:"outer-7"},[i("div",{staticClass:"a1"},[i("div",{staticClass:"b1"})]),e._v(" "),i("div",{staticClass:"a2"})])],e._v(" "),i("style",[e._v("\n  .outer-7 {\n    width: 400px;\n    display: flex;\n  }\n  .outer-7 .a1 {\n    background: red;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 0;\n    overflow-x: auto;\n  }\n  .outer-7 .b1 {\n    width: 300px\n  }\n  .outer-7 .a2 {\n    background: blue;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n")])],2)],2),e._v(" "),i("p",[e._v("如果有多个 flex item 呢")]),e._v(" "),i("DemoAndCode",{attrs:{htmlStr:"%3Ctemplate%3E%0A%20%20%3Cdiv%20class%3D%22outer-14%22%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a1%22%3E%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a2%22%3E%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a3%22%3E%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Ftemplate%3E%0A%3Cstyle%3E%0A%20%20.outer-14%20%7B%0A%20%20%20%20width%3A%20400px%3B%0A%20%20%20%20display%3A%20flex%3B%0A%20%20%7D%0A%20%20.outer-14%20.a1%20%7B%0A%20%20%20%20background%3A%20red%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%20200px%3B%0A%20%20%20%20min-width%3A%20250px%3B%0A%20%20%7D%0A%20%20.outer-14%20.a2%20%7B%0A%20%20%20%20background%3A%20blue%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%2020px%3B%0A%20%20%7D%0A%20%20.outer-14%20.a3%20%7B%0A%20%20%20%20background%3A%20green%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%200%3B%0A%20%20%7D%0A%3C%2Fstyle%3E%0A",language:"vue",showText:"show code",hideText:"hide code",jsLibsStr:"%5B%5D",cssLibsStr:"%5B%5D",minHeight:void 0,onlineBtnsStr:"%7B%22codepen%22%3Atrue%2C%22jsfiddle%22%3Atrue%2C%22codesandbox%22%3Atrue%7D",codesandboxStr:"%7B%22deps%22%3A%7B%7D%2C%22json%22%3A%22%22%2C%22query%22%3A%22module%3DApp.vue%22%2C%22embed%22%3A%22%22%7D"}},[i("template",{slot:"demo"},[[i("div",{staticClass:"outer-14"},[i("div",{staticClass:"a1"}),e._v(" "),i("div",{staticClass:"a2"}),e._v(" "),i("div",{staticClass:"a3"})])],e._v(" "),i("style",[e._v("\n  .outer-14 {\n    width: 400px;\n    display: flex;\n  }\n  .outer-14 .a1 {\n    background: red;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 200px;\n    min-width: 250px;\n  }\n  .outer-14 .a2 {\n    background: blue;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 20px;\n  }\n  .outer-14 .a3 {\n    background: green;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n")])],2)],2),e._v(" "),i("p",[e._v("推导一下过程")]),e._v(" "),i("ul",[i("li",[e._v("剩余空间 = (400 - 200 - 20 - 0) = 180")]),e._v(" "),i("li",[e._v("3个 item 平分 180 / 3 = 60")]),e._v(" "),i("li",[e._v("a1 = 60 + 200 = 260 > 250 取 260")]),e._v(" "),i("li",[e._v("a2 = 60 + 20 = 80")]),e._v(" "),i("li",[e._v("a3 = 60")])]),e._v(" "),i("p",[e._v("如果 a1 算出来的宽度比 min-width 小呢？")]),e._v(" "),i("DemoAndCode",{attrs:{htmlStr:"%3Ctemplate%3E%0A%20%20%3Cdiv%20class%3D%22outer-15%22%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a1%22%3E%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a2%22%3E%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22a3%22%3E%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Ftemplate%3E%0A%3Cstyle%3E%0A%20%20.outer-15%20%7B%0A%20%20%20%20width%3A%20400px%3B%0A%20%20%20%20display%3A%20flex%3B%0A%20%20%7D%0A%20%20.outer-15%20.a1%20%7B%0A%20%20%20%20background%3A%20red%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%2080px%3B%0A%20%20%20%20min-width%3A%20250px%3B%0A%20%20%7D%0A%20%20.outer-15%20.a2%20%7B%0A%20%20%20%20background%3A%20blue%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%2020px%3B%0A%20%20%7D%0A%20%20.outer-15%20.a3%20%7B%0A%20%20%20%20background%3A%20green%3B%0A%20%20%20%20height%3A%20100px%3B%0A%20%20%20%20flex-grow%3A%201%3B%0A%20%20%20%20flex-basis%3A%200%3B%0A%20%20%7D%0A%3C%2Fstyle%3E%0A",language:"vue",showText:"show code",hideText:"hide code",jsLibsStr:"%5B%5D",cssLibsStr:"%5B%5D",minHeight:void 0,onlineBtnsStr:"%7B%22codepen%22%3Atrue%2C%22jsfiddle%22%3Atrue%2C%22codesandbox%22%3Atrue%7D",codesandboxStr:"%7B%22deps%22%3A%7B%7D%2C%22json%22%3A%22%22%2C%22query%22%3A%22module%3DApp.vue%22%2C%22embed%22%3A%22%22%7D"}},[i("template",{slot:"demo"},[[i("div",{staticClass:"outer-15"},[i("div",{staticClass:"a1"}),e._v(" "),i("div",{staticClass:"a2"}),e._v(" "),i("div",{staticClass:"a3"})])],e._v(" "),i("style",[e._v("\n  .outer-15 {\n    width: 400px;\n    display: flex;\n  }\n  .outer-15 .a1 {\n    background: red;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 80px;\n    min-width: 250px;\n  }\n  .outer-15 .a2 {\n    background: blue;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 20px;\n  }\n  .outer-15 .a3 {\n    background: green;\n    height: 100px;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n")])],2)],2),e._v(" "),i("p",[e._v("计算过程就变成了")]),e._v(" "),i("ul",[i("li",[e._v("剩余空间 = (400 - 80 - 20 - 0) = 300")]),e._v(" "),i("li",[e._v("3个 item 平分 300 / 3 = 100")]),e._v(" "),i("li",[e._v("a1 = 100 + 80 = 180 < 250 取 250")])]),e._v(" "),i("p",[e._v("到了 a2 这里，a2 = 100 + 20 = 80，那么明显是不对的，因为 a1 已经占用了多余的空间，所以就应该按照剩下的空间（400 - 250）计算了")]),e._v(" "),i("ul",[i("li",[e._v("除开a1的剩余空间 = 150 - 20 - 0 = 130")]),e._v(" "),i("li",[e._v("a2 和 a3 平分 130 / 2 = 65")]),e._v(" "),i("li",[e._v("a2 = 65 + 20 = 85")]),e._v(" "),i("li",[e._v("a3 = 65")])]),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),i("p",[e._v("由此可以得出， flex item 分为两种，一种是 min-width > main width 第二种是 min-width <= main width。 这个时候可以先把第一种item去除，因为他们已经被强制变成min-width宽度了，从容器总宽度剪掉他们的宽度之和，然后剩下的用来计算第二种item的空间分配。")])])],1)}),[],!1,null,null,null);t.default=a.exports}}]);